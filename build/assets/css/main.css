/* ==========================================================================
   Main Scss File: Importing all other files
   ========================================================================== */
/* ==========================================================================
   Normalize.scss settings
   ========================================================================== */
/**
 * Includes legacy browser support IE6/7
 *
 * Set to false if you want to drop support for IE6 and IE7
 */
/* Base
   ========================================================================== */
/**
 * 1. Set default font family to sans-serif.
 * 2. Prevent iOS and IE text size adjust after device orientation change,
 *    without disabling user zoom.
 * 3. Corrects text resizing oddly in IE 6/7 when body `font-size` is set using
 *  `em` units.
 */
@import url("https://fonts.googleapis.com/css?family=Istok+Web:400,400italic,700,700italic");
@import url("https://fonts.googleapis.com/css?family=Ubuntu:400,500,700");
html {
  font-family: sans-serif;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/**
 * Remove default margin.
 */
body {
  margin: 0; }

/* HTML5 display definitions
   ========================================================================== */
/**
 * Correct `block` display not defined for any HTML5 element in IE 8/9.
 * Correct `block` display not defined for `details` or `summary` in IE 10/11
 * and Firefox.
 * Correct `block` display not defined for `main` in IE 11.
 */
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
menu,
nav,
section,
summary {
  display: block; }

/**
 * 1. Correct `inline-block` display not defined in IE 6/7/8/9 and Firefox 3.
 * 2. Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera.
 */
audio,
canvas,
progress,
video {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */ }

/**
 * Prevents modern browsers from displaying `audio` without controls.
 * Remove excess height in iOS 5 devices.
 */
audio:not([controls]) {
  display: none;
  height: 0; }

/**
 * Address `[hidden]` styling not present in IE 8/9/10.
 * Hide the `template` element in IE 8/9/10/11, Safari, and Firefox < 22.
 */
[hidden],
template {
  display: none; }

/* Links
   ========================================================================== */
/**
 * Remove the gray background color from active links in IE 10.
 */
a {
  background-color: transparent; }

/**
 * Improve readability of focused elements when they are also in an
 * active/hover state.
 */
a:active, a:hover {
  outline: 0; }

/* Text-level semantics
   ========================================================================== */
/**
 * Address styling not present in IE 8/9/10/11, Safari, and Chrome.
 */
abbr[title] {
  border-bottom: 1px dotted; }

/**
 * Address style set to `bolder` in Firefox 4+, Safari, and Chrome.
 */
b,
strong {
  font-weight: bold; }

/**
 * Address styling not present in Safari and Chrome.
 */
dfn {
  font-style: italic; }

/**
 * Address variable `h1` font-size and margin within `section` and `article`
 * contexts in Firefox 4+, Safari, and Chrome.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/**
 * Addresses styling not present in IE 8/9.
 */
mark {
  background: #ff0;
  color: #000; }

/**
 * Address inconsistent and variable font size in all browsers.
 */
small {
  font-size: 80%; }

/**
 * Prevent `sub` and `sup` affecting `line-height` in all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sup {
  top: -0.5em; }

sub {
  bottom: -0.25em; }

/* Embedded content
   ========================================================================== */
/**
 * 1. Remove border when inside `a` element in IE 8/9/10.
 * 2. Improves image quality when scaled in IE 7.
 */
img {
  border: 0; }

/**
 * Correct overflow not hidden in IE 9/10/11.
 */
svg:not(:root) {
  overflow: hidden; }

/* Grouping content
   ========================================================================== */
/**
 * Address margin not present in IE 8/9 and Safari.
 */
figure {
  margin: 1em 40px; }

/**
 * Address differences between Firefox and other browsers.
 */
hr {
  box-sizing: content-box;
  height: 0; }

/**
 * Contain overflow in all browsers.
 */
pre {
  overflow: auto; }

/**
 * Address odd `em`-unit font size rendering in all browsers.
 * Correct font family set oddly in IE 6, Safari 4/5, and Chrome.
 */
code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  font-size: 1em; }

/* Forms
   ========================================================================== */
/**
 * Known limitation: by default, Chrome and Safari on OS X allow very limited
 * styling of `select`, unless a `border` property is set.
 */
/**
 * 1. Correct color not being inherited.
 *  Known issue: affects color of disabled elements.
 * 2. Correct font properties not being inherited.
 * 3. Address margins set differently in Firefox 4+, Safari, and Chrome.
 * 4. Improves appearance and consistency in all browsers.
 */
button,
input,
optgroup,
select,
textarea {
  color: inherit;
  /* 1 */
  font: inherit;
  /* 2 */
  margin: 0;
  /* 3 */ }

/**
 * Address `overflow` set to `hidden` in IE 8/9/10/11.
 */
button {
  overflow: visible; }

/**
 * Address inconsistent `text-transform` inheritance for `button` and `select`.
 * All other form control elements do not inherit `text-transform` values.
 * Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera.
 * Correct `select` style inheritance in Firefox.
 */
button,
select {
  text-transform: none; }

/**
 * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
 *  and `video` controls.
 * 2. Correct inability to style clickable `input` types in iOS.
 * 3. Improve usability and consistency of cursor style between image-type
 *  `input` and others.
 * 4. Removes inner spacing in IE 7 without affecting normal text inputs.
 *  Known issue: inner spacing remains in IE 6.
 */
button,
html input[type="button"],
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
  cursor: pointer;
  /* 3 */ }

/**
 * Re-set default cursor for disabled elements.
 */
button[disabled],
html input[disabled] {
  cursor: default; }

/**
 * Remove inner padding and border in Firefox 4+.
 */
button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0; }

/**
 * Address Firefox 4+ setting `line-height` on `input` using `!important` in
 * the UA stylesheet.
 */
input {
  line-height: normal; }

/**
 * 1. Address box sizing set to `content-box` in IE 8/9/10.
 * 2. Remove excess padding in IE 8/9/10.
 *  Known issue: excess padding remains in IE 6.
 */
input[type="checkbox"],
input[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Fix the cursor style for Chrome's increment/decrement buttons. For certain
 * `font-size` values of the `input`, it causes the cursor style of the
 * decrement button to change from `default` to `text`.
 */
input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
 * 1. Address `appearance` set to `searchfield` in Safari and Chrome.
 * 2. Address `box-sizing` set to `border-box` in Safari and Chrome.
 */
input[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  box-sizing: content-box;
  /* 2 */ }

/**
 * Remove inner padding and search cancel button in Safari and Chrome on OS X.
 * Safari (but not Chrome) clips the cancel button when the search input has
 * padding (and `textfield` appearance).
 */
input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * Define consistent border, margin, and padding.
 */
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em; }

/**
 * 1. Correct `color` not being inherited in IE 8/9/10/11.
 * 2. Remove padding so people aren't caught out if they zero out fieldsets.
 * 3. Corrects text not wrapping in Firefox 3.
 * 4. Corrects alignment displayed oddly in IE 6/7.
 */
legend {
  border: 0;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Remove default vertical scrollbar in IE 8/9/10/11.
 */
textarea {
  overflow: auto; }

/**
 * Don't inherit the `font-weight` (applied by a rule above).
 * NOTE: the default cannot safely be changed in Chrome and Safari on OS X.
 */
optgroup {
  font-weight: bold; }

/* Tables
   ========================================================================== */
/**
 * Remove most spacing between table cells.
 */
table {
  border-collapse: collapse;
  border-spacing: 0; }

td,
th {
  padding: 0; }

body,
h1, h2, h3, h4, h5, h6,
p, blockquote, pre,
dl, dd, ol, ul,
form, fieldset, legend,
figure,
table, th, td, caption,
hr {
  margin: 0;
  padding: 0; }

abbr[title],
dfn[title] {
  cursor: help; }

u,
ins {
  text-decoration: none; }

ins {
  border-bottom: 1px solid; }

fieldset {
  background-color: transparent;
  border: 0; }

html {
  background-image: url("http://basehold.it/i/24"); }

.srt {
  border: 0;
  clip: rect(0 0 0 0);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  width: 1px; }

.fullscreen {
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
      -ms-flex-direction: column;
          flex-direction: column;
  -webkit-justify-content: center;
      -ms-flex-pack: center;
          justify-content: center;
  min-height: 0; }
  @media (min-width: 640px) {
    .fullscreen {
      min-height: 100vh; } }

.padding--full {
  padding: 1.5rem; }

.margin--full {
  margin: 1.5rem; }

.text-center {
  text-align: center; }

.ng-binding {
  box-sizing: border-box; }

html {
  box-sizing: border-box; }

*, *:before, *:after {
  box-sizing: inherit; }

.g, .g--gutters {
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: wrap;
      -ms-flex-wrap: wrap;
          flex-wrap: wrap; }

.g-cell {
  -webkit-flex: 1;
      -ms-flex: 1;
          flex: 1; }

.g--gutters {
  margin: -1.5rem 0 1.5rem -1.5rem; }
  .g--gutters > .g-cell {
    padding: 1.5rem 0 0 1.5rem; }

.g--top {
  -webkit-align-items: flex-start;
      -ms-flex-align: start;
              -ms-grid-row-align: flex-start;
          align-items: flex-start; }

.g--bottom {
  -webkit-align-items: flex-end;
      -ms-flex-align: end;
              -ms-grid-row-align: flex-end;
          align-items: flex-end; }

.g--center {
  -webkit-align-items: center;
      -ms-flex-align: center;
              -ms-grid-row-align: center;
          align-items: center; }

/* Alignment per cell */
.g-cell--top {
  -webkit-align-self: flex-start;
      -ms-flex-item-align: start;
          align-self: flex-start; }

.g-cell--bottom {
  -webkit-align-self: flex-end;
      -ms-flex-item-align: end;
          align-self: flex-end; }

.g-cell--center {
  -webkit-align-self: center;
      -ms-flex-item-align: center;
          align-self: center; }

.g--fit > .g-cell {
  -webkit-flex: 1;
      -ms-flex: 1;
          flex: 1; }

.g--full > .g-cell {
  -webkit-flex: 0 0 100%;
      -ms-flex: 0 0 100%;
          flex: 0 0 100%; }

.g--1of2 > .g-cell {
  -webkit-flex: 0 0 50%;
      -ms-flex: 0 0 50%;
          flex: 0 0 50%; }

.g--1of3 > .g-cell {
  -webkit-flex: 0 0 33.3333%;
      -ms-flex: 0 0 33.3333%;
          flex: 0 0 33.3333%; }

.g--1of4 > .g-cell {
  -webkit-flex: 0 0 25%;
      -ms-flex: 0 0 25%;
          flex: 0 0 25%; }

.g--4 {
  width: 25%; }

@media (min-width: 400px) {
  .g--fit--small > .g-cell {
    -webkit-flex: 1;
        -ms-flex: 1;
            flex: 1; }
  .g--full--small > .g-cell {
    -webkit-flex: 0 0 100%;
        -ms-flex: 0 0 100%;
            flex: 0 0 100%; }
  .g--1of2--small > .g-cell {
    -webkit-flex: 0 0 50%;
        -ms-flex: 0 0 50%;
            flex: 0 0 50%; }
  .g--1of3--small > .g-cell {
    -webkit-flex: 0 0 33.3333%;
        -ms-flex: 0 0 33.3333%;
            flex: 0 0 33.3333%; }
  .g--1of4--small > .g-cell {
    -webkit-flex: 0 0 25%;
        -ms-flex: 0 0 25%;
            flex: 0 0 25%; } }

@media (min-width: 640px) {
  .g--fit--medium > .g-cell {
    -webkit-flex: 1;
        -ms-flex: 1;
            flex: 1; }
  .g--full--medium > .g-cell {
    -webkit-flex: 0 0 100%;
        -ms-flex: 0 0 100%;
            flex: 0 0 100%; }
  .g--1of2--medium > .g-cell {
    -webkit-flex: 0 0 50%;
        -ms-flex: 0 0 50%;
            flex: 0 0 50%; }
  .g--1of3--medium > .g-cell {
    -webkit-flex: 0 0 33.3333%;
        -ms-flex: 0 0 33.3333%;
            flex: 0 0 33.3333%; }
  .g--1of4--medium > .g-cell {
    -webkit-flex: 0 0 25%;
        -ms-flex: 0 0 25%;
            flex: 0 0 25%; } }

@media (min-width: 1024px) {
  .g--fit--large > .g-cell {
    -webkit-flex: 1;
        -ms-flex: 1;
            flex: 1; }
  .g--full--large > .g-cell {
    -webkit-flex: 0 0 100%;
        -ms-flex: 0 0 100%;
            flex: 0 0 100%; }
  .g--1of2--large > .g-cell {
    -webkit-flex: 0 0 50%;
        -ms-flex: 0 0 50%;
            flex: 0 0 50%; }
  .g--1of3--large > .g-cell {
    -webkit-flex: 0 0 33.3333%;
        -ms-flex: 0 0 33.3333%;
            flex: 0 0 33.3333%; }
  .g--1of4--large > .g-cell {
    -webkit-flex: 0 0 25%;
        -ms-flex: 0 0 25%;
            flex: 0 0 25%; } }

@media (min-width: 1200px) {
  .g--fit--xlarge > .g-cell {
    -webkit-flex: 1;
        -ms-flex: 1;
            flex: 1; }
  .g--full--xlarge > .g-cell {
    -webkit-flex: 0 0 100%;
        -ms-flex: 0 0 100%;
            flex: 0 0 100%; }
  .g--1of2--xlarge > .g-cell {
    -webkit-flex: 0 0 50%;
        -ms-flex: 0 0 50%;
            flex: 0 0 50%; }
  .g--1of3--xlarge > .g-cell {
    -webkit-flex: 0 0 33.3333%;
        -ms-flex: 0 0 33.3333%;
            flex: 0 0 33.3333%; }
  .g--1of4--xlarge > .g-cell {
    -webkit-flex: 0 0 25%;
        -ms-flex: 0 0 25%;
            flex: 0 0 25%; } }

@media (min-width: 1440px) {
  .g--fit--xxlarge > .g-cell {
    -webkit-flex: 1;
        -ms-flex: 1;
            flex: 1; }
  .g--full--xxlarge > .g-cell {
    -webkit-flex: 0 0 100%;
        -ms-flex: 0 0 100%;
            flex: 0 0 100%; }
  .g--1of2--xxlarge > .g-cell {
    -webkit-flex: 0 0 50%;
        -ms-flex: 0 0 50%;
            flex: 0 0 50%; }
  .g--1of3--xxlarge > .g-cell {
    -webkit-flex: 0 0 33.3333%;
        -ms-flex: 0 0 33.3333%;
            flex: 0 0 33.3333%; }
  .g--1of4--xxlarge > .g-cell {
    -webkit-flex: 0 0 25%;
        -ms-flex: 0 0 25%;
            flex: 0 0 25%; } }

.fade-up {
  -webkit-transform: translateY(0);
      -ms-transform: translateY(0);
          transform: translateY(0);
  transition: opacity 1s ease, -webkit-transform 1s ease;
  transition: opacity 1s ease, transform 1s ease;
  transition: opacity 1s ease, transform 1s ease, -webkit-transform 1s ease;
  opacity: 1.0; }
  .fade-up.inactive,
  body.is-loading .fade-up {
    opacity: 0;
    -webkit-transform: translateY(1.5rem);
        -ms-transform: translateY(1.5rem);
            transform: translateY(1.5rem); }

.wireframe section,
.wireframe footer,
.wireframe aside,
.wireframe main,
.wireframe nav,
.wireframe article,
.wireframe header,
.wireframe .wire-block {
  font: small sans-serif;
  margin: 0.75rem;
  border: 1px solid gainsboro !important;
  background-color: whitesmoke !important; }
  .wireframe section section,
  .wireframe section footer,
  .wireframe section aside,
  .wireframe section main,
  .wireframe section nav,
  .wireframe section article,
  .wireframe section header,
  .wireframe section .wire-block,
  .wireframe footer section,
  .wireframe footer footer,
  .wireframe footer aside,
  .wireframe footer main,
  .wireframe footer nav,
  .wireframe footer article,
  .wireframe footer header,
  .wireframe footer .wire-block,
  .wireframe aside section,
  .wireframe aside footer,
  .wireframe aside aside,
  .wireframe aside main,
  .wireframe aside nav,
  .wireframe aside article,
  .wireframe aside header,
  .wireframe aside .wire-block,
  .wireframe main section,
  .wireframe main footer,
  .wireframe main aside,
  .wireframe main main,
  .wireframe main nav,
  .wireframe main article,
  .wireframe main header,
  .wireframe main .wire-block,
  .wireframe nav section,
  .wireframe nav footer,
  .wireframe nav aside,
  .wireframe nav main,
  .wireframe nav nav,
  .wireframe nav article,
  .wireframe nav header,
  .wireframe nav .wire-block,
  .wireframe article section,
  .wireframe article footer,
  .wireframe article aside,
  .wireframe article main,
  .wireframe article nav,
  .wireframe article article,
  .wireframe article header,
  .wireframe article .wire-block,
  .wireframe header section,
  .wireframe header footer,
  .wireframe header aside,
  .wireframe header main,
  .wireframe header nav,
  .wireframe header article,
  .wireframe header header,
  .wireframe header .wire-block,
  .wireframe .wire-block section,
  .wireframe .wire-block footer,
  .wireframe .wire-block aside,
  .wireframe .wire-block main,
  .wireframe .wire-block nav,
  .wireframe .wire-block article,
  .wireframe .wire-block header,
  .wireframe .wire-block .wire-block {
    background-color: rgba(232, 232, 232, 0.4) !important; }
  .wireframe section h1,
  .wireframe section h2,
  .wireframe section h3,
  .wireframe section h4,
  .wireframe footer h1,
  .wireframe footer h2,
  .wireframe footer h3,
  .wireframe footer h4,
  .wireframe aside h1,
  .wireframe aside h2,
  .wireframe aside h3,
  .wireframe aside h4,
  .wireframe main h1,
  .wireframe main h2,
  .wireframe main h3,
  .wireframe main h4,
  .wireframe nav h1,
  .wireframe nav h2,
  .wireframe nav h3,
  .wireframe nav h4,
  .wireframe article h1,
  .wireframe article h2,
  .wireframe article h3,
  .wireframe article h4,
  .wireframe header h1,
  .wireframe header h2,
  .wireframe header h3,
  .wireframe header h4,
  .wireframe .wire-block h1,
  .wireframe .wire-block h2,
  .wireframe .wire-block h3,
  .wireframe .wire-block h4 {
    font-weight: 100;
    margin: 0.75rem;
    text-align: center;
    color: silver; }

img {
  max-width: 100%; }

input[type="email"],
input[type="number"],
input[type="password"],
input[type="search"],
input[type="tel"],
input[type="text"],
input[type="url"],
textarea,
select, label, ul, ol, dl, table, p,
.p, a,
strong,
em,
b,
i,
u,
del,
s,
sup,
sub,
small,
kbd,
q,
cite,
dfn,
mark,
code,
samp,
var {
  font-family: "Istok Web", "Helvetica Neu", Helvetica, Arial, sans-serif;
  font-size: inherit;
  font-weight: 400;
  line-height: 1.5;
  color: inherit; }

html {
  font-size: 100%; }
  @media (min-width: 640px) {
    html {
      font-size: 110%; } }
  @media (min-width: 640px) {
    html {
      font-size: 115%; } }
  @media (min-width: 1200px) {
    html {
      font-size: 125%; } }

.content {
  position: relative; }

a,
a:visited {
  font-family: "Ubuntu", "Helvetica Neu", Helvetica, Arial, sans-serif;
  text-decoration: none;
  color: #3372df; }
  a:hover, a:focus,
  a:visited:hover,
  a:visited:focus {
    color: #174595; }

.btn,
a.btn,
button,
input[type="button"],
input[type="reset"],
input[type="submit"] {
  font-family: "Ubuntu", "Helvetica Neu", Helvetica, Arial, sans-serif;
  font-size: 0.75rem;
  font-weight: 400;
  letter-spacing: 1px;
  line-height: 1.5;
  display: inline-block;
  padding: 0.75rem 1.5rem;
  cursor: pointer;
  text-align: center;
  white-space: nowrap;
  text-decoration: none;
  border: 0.1rem solid #ffffff;
  background: rgba(255, 255, 255, 0.1);
  color: #ffffff;
  border-radius: 0.1rem;
  transition: background 0.2s ease-out, color 0.2s ease-out; }
  .btn:hover, .btn:focus,
  a.btn:hover,
  a.btn:focus,
  button:hover,
  button:focus,
  input[type="button"]:hover,
  input[type="button"]:focus,
  input[type="reset"]:hover,
  input[type="reset"]:focus,
  input[type="submit"]:hover,
  input[type="submit"]:focus {
    background-color: rgba(255, 255, 255, 0.2);
    border-color: #ffffff;
    color: #ffffff; }
  .btn:disabled,
  a.btn:disabled,
  button:disabled,
  input[type="button"]:disabled,
  input[type="reset"]:disabled,
  input[type="submit"]:disabled {
    cursor: not-allowed;
    color: #7e7e7e;
    border-color: #b1b1b1;
    background: #b1b1b1; }
    .btn:disabled:hover,
    a.btn:disabled:hover,
    button:disabled:hover,
    input[type="button"]:disabled:hover,
    input[type="reset"]:disabled:hover,
    input[type="submit"]:disabled:hover {
      color: #7e7e7e;
      border-color: #b1b1b1;
      background: #b1b1b1; }

.btn--action {
  color: black;
  border-color: #2B2D42;
  background-color: #2B2D42; }
  .btn--action:hover, .btn--action:focus {
    color: #2B2D42; }

.btn--success {
  color: #02110a;
  border-color: #0f9d58;
  background-color: #0f9d58; }
  .btn--success:hover, .btn--success:focus {
    color: #0f9d58; }

.btn--error {
  color: #531b16;
  border-color: #cb4437;
  background-color: #cb4437; }
  .btn--error:hover, .btn--error:focus {
    color: #cb4437; }

.btn--warning {
  color: #5b4300;
  border-color: #f4b400;
  background-color: #f4b400; }
  .btn--warning:hover, .btn--warning:focus {
    color: #f4b400; }

.btn--info {
  color: #521069;
  border-color: #b233df;
  background-color: #b233df; }
  .btn--info:hover, .btn--info:focus {
    color: #b233df; }

.btn--outline--action {
  color: #2B2D42;
  border-color: #2B2D42;
  background-color: transparent; }
  .btn--outline--action:hover, .btn--outline--action:focus {
    color: black;
    background-color: #2B2D42; }

.btn--outline--success {
  color: #0f9d58;
  border-color: #0f9d58;
  background-color: transparent; }
  .btn--outline--success:hover, .btn--outline--success:focus {
    color: #02110a;
    background-color: #0f9d58; }

.btn--outline--error {
  color: #cb4437;
  border-color: #cb4437;
  background-color: transparent; }
  .btn--outline--error:hover, .btn--outline--error:focus {
    color: #531b16;
    background-color: #cb4437; }

.btn--outline--warning {
  color: #f4b400;
  border-color: #f4b400;
  background-color: transparent; }
  .btn--outline--warning:hover, .btn--outline--warning:focus {
    color: #5b4300;
    background-color: #f4b400; }

.btn--outline--info {
  color: #b233df;
  border-color: #b233df;
  background-color: transparent; }
  .btn--outline--info:hover, .btn--outline--info:focus {
    color: #521069;
    background-color: #b233df; }

.btn--text {
  color: #3372df;
  border: none;
  background: none; }
  .btn--text:hover, .btn--text:focus {
    color: #5f90e6; }

.btn--fit {
  display: block;
  width: 100%; }

input[type="email"],
input[type="number"],
input[type="password"],
input[type="search"],
input[type="tel"],
input[type="text"],
input[type="url"],
textarea,
select {
  width: 100%;
  padding: 0.75rem;
  border: 0.1rem #b1b1b1 solid;
  border-radius: 0.1rem;
  background-color: transparent;
  box-shadow: none;
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none; }
  input[type="email"]:focus,
  input[type="number"]:focus,
  input[type="password"]:focus,
  input[type="search"]:focus,
  input[type="tel"]:focus,
  input[type="text"]:focus,
  input[type="url"]:focus,
  textarea:focus,
  select:focus {
    border-color: #b1b1b1;
    outline: 0; }

.field-container {
  margin-top: 1.5rem; }
  .field-container:first-child {
    margin-top: 0; }

ul {
  margin-top: 0;
  padding-left: 0;
  list-style: circle inside; }
  ul li {
    margin-bottom: 0.75rem; }
  ul ul,
  ul dl,
  ul ol {
    font-size: 90%;
    margin: 0.75rem 0 0.75rem 1.5rem; }

ol {
  margin-top: 0;
  padding-left: 0;
  list-style: decimal inside; }
  ol li {
    margin-bottom: 0.75rem; }
  ol ul,
  ol dl,
  ol ol {
    font-size: 90%;
    margin: 0.75rem 0 0.75rem 1.5rem; }

dl {
  margin-top: 0;
  padding-left: 0; }
  dl dt,
  dl dd {
    margin-bottom: 0.75rem; }
  dl dt {
    font-weight: 700; }
  dl dd {
    padding-left: 1.5rem; }
  dl ul,
  dl dl,
  dl ol {
    font-size: 90%;
    margin: 0.75rem 0 0.75rem 1.5rem; }

.list--horiz {
  margin: 0;
  padding: 0;
  list-style: none; }

.list--horiz__item {
  display: inline-block;
  margin-bottom: 0;
  margin-left: 0.75rem; }
  .list--horiz__item:first-child {
    margin-left: 0; }

.logo__link {
  display: block;
  max-width: 4.5rem;
  height: 100%;
  max-height: 4.5rem;
  fill: #3372df;
  stroke: #3372df; }
  .logo__link > svg {
    max-width: 4.5rem;
    max-height: 4.5rem; }

table {
  width: 100%; }
  table th,
  table td {
    text-align: left;
    border-bottom: 0.1rem solid #b1b1b1;
    padding: 0.75rem; }
    table th:first-child,
    table td:first-child {
      padding-left: 0; }
    table th:last-child,
    table td:last-child {
      padding-right: 0; }

h1,
h2,
h3,
h4,
h5 {
  font-family: "Ubuntu", "Helvetica Neu", Helvetica, Arial, sans-serif;
  font-weight: 700;
  line-height: 1.5;
  margin-bottom: 0.75rem; }

h1,
.h1 {
  font-size: 3.157rem; }

h2,
.h2 {
  font-size: 2.369rem; }

h3,
.h3 {
  font-size: 1.777rem; }

h4,
.h4,
.contact__title h2,
.contact__email h2 {
  font-size: 1.333rem; }

p,
.p {
  margin-bottom: 1.5rem; }

blockquote {
  border-left: 0.1rem #b1b1b1 solid;
  padding: 0.75rem 1.5rem;
  background: #b1b1b1; }
  blockquote *:last-child {
    margin: 0; }

.main-nav__list {
  padding: 0;
  margin: 0;
  list-style: none; }
  @media (min-width: 0) and (max-width: 640px) {
    .main-nav__list {
      display: -webkit-flex;
      display: -ms-flexbox;
      display: flex;
      -webkit-flex-wrap: wrap;
          -ms-flex-wrap: wrap;
              flex-wrap: wrap;
      -webkit-justify-content: flex-start;
          -ms-flex-pack: start;
              justify-content: flex-start; } }
  @media (min-width: 640px) and (max-width: 1200px) {
    .main-nav__list {
      display: -webkit-flex;
      display: -ms-flexbox;
      display: flex;
      -webkit-flex-wrap: wrap;
          -ms-flex-wrap: wrap;
              flex-wrap: wrap;
      -webkit-justify-content: center;
          -ms-flex-pack: center;
              justify-content: center; } }

@media (min-width: 1024px) {
  .main-nav__item {
    margin-bottom: 0; } }

@media (max-width: 1024px) {
  .main-nav__item {
    margin-bottom: 0; } }

.main-nav__link {
  display: block;
  padding: 0.75rem; }
  @media (min-width: 1200px) {
    .main-nav__link {
      text-align: right; } }

.bg1 {
  background-color: #2B2D42; }

.bg2 {
  background-color: #3A506B;
  color: #ffffff; }
  .bg2 a {
    color: #ffffff; }
    .bg2 a:hover, .bg2 a:focus {
      color: rgba(255, 255, 255, 0.7); }

.bg3 {
  background-color: #818EA5;
  color: #ffffff; }
  .bg3 li {
    background: rgba(255, 255, 255, 0.1);
    border: 1px solid rgba(255, 255, 255, 0.15); }

.bg4 {
  background-color: #EDF2F4;
  color: #2B2D42; }

.bg5 {
  background-color: #5BC0BE;
  color: #ffffff; }

.bg6 {
  background-color: #6FFFE9; }

svg {
  width: 100%;
  fill: #ffffff; }

@media (min-width: 1200px) {
  .site-wrap {
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex; }
  .main-content {
    -webkit-flex: 1 1 0;
        -ms-flex: 1 1 0;
            flex: 1 1 0;
    overflow-x: hidden;
    overflow-y: scroll;
    margin-left: 15rem; }
    .main-content .section__inner {
      max-width: 67.5rem; }
  .sidebar {
    cursor: default;
    height: 100vh;
    left: 0;
    overflow-x: hidden;
    overflow-y: auto;
    position: fixed;
    top: 0;
    width: 15rem;
    z-index: 1;
    padding: 1.5rem; }
  .main-nav {
    min-height: 100%;
    width: 100%;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex; }
  .main-nav__list {
    -webkit-align-self: center;
        -ms-flex-item-align: center;
            align-self: center;
    width: 100%; } }

@media (max-width: 1200px) {
  .sidebar {
    position: fixed;
    width: 100%;
    top: 0;
    z-index: 1; } }

.section-what ul {
  padding: 0;
  list-style: none; }
  .section-what ul li {
    margin-bottom: 0;
    padding: 0.75rem; }
    .section-what ul li .icn-wrap {
      -webkit-flex: 0 0 1.5rem;
          -ms-flex: 0 0 1.5rem;
              flex: 0 0 1.5rem;
      margin-right: 0.75rem;
      display: -webkit-flex;
      display: -ms-flexbox;
      display: flex; }
      .section-what ul li .icn-wrap svg {
        margin-top: 0.375rem;
        width: 1.5rem;
        height: 1.5rem; }

.main-nav__link {
  position: relative; }
  .main-nav__link::before {
    content: '';
    position: absolute;
    left: 0;
    bottom: 0;
    width: 100%;
    background: #6FFFE9;
    height: 4px;
    -webkit-transform: scale3d(0, 1, 1);
            transform: scale3d(0, 1, 1);
    transition: -webkit-transform 0.1s;
    transition: transform 0.1s;
    transition: transform 0.1s, -webkit-transform 0.1s; }
  @media (min-width: 1200px) {
    .main-nav__link::after {
      content: '';
      position: absolute;
      left: 0;
      bottom: 0;
      width: 100%;
      background: rgba(255, 255, 255, 0.1);
      height: 4px; } }

.is-current .main-nav__link::before {
  -webkit-transform: scale3d(1, 1, 1);
          transform: scale3d(1, 1, 1);
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 0.3s; }

h1 {
  position: relative;
  margin-bottom: 3rem;
  z-index: 0; }
  h1:after {
    content: "";
    position: absolute;
    height: 4px;
    background: #ffffff;
    width: 100%;
    left: 0;
    bottom: -0.75rem; }

.section-intro h1 {
  margin-bottom: 1.5rem; }

@media (min-width: 640px) {
  .section__inner {
    padding-top: 3rem;
    padding-bottom: 3rem; } }

@media (min-width: 1440px) {
  .section__inner {
    padding: 3rem; } }

p {
  max-width: 33rem; }

.section-intro {
  background-image: url("../img/intro-bg.svg");
  background-repeat: no-repeat;
  background-attachment: fixed;
  background-position: top right;
  background-size: 100% 100%;
  font-size: 110%; }
  @media (max-width: 1200px) {
    .section-intro {
      margin-top: 3rem; } }
  .section-intro .section__inner {
    padding-left: 1.5rem;
    padding-right: 1.5rem; }
  @media (min-width: 1200px) {
    .section-intro {
      display: -webkit-flex;
      display: -ms-flexbox;
      display: flex;
      height: 100vh;
      font-size: 150%; }
      .section-intro .section__inner {
        -webkit-align-self: center;
            -ms-flex-item-align: center;
                align-self: center;
        padding-left: 3rem; } }
  @media (max-width: 1200px) {
    .section-intro {
      padding-top: 6rem;
      padding-bottom: 6rem; } }

@media (min-width: 640px) {
  .section-who .g--gutters {
    margin-bottom: 0; } }

.section-who__title {
  margin-bottom: 3rem; }

.bio__inner {
  max-width: 30rem; }
  @media (max-width: 640px) {
    .bio__inner.michael {
      margin-bottom: 1.5rem; } }

.bio__content {
  border-radius: 0.1rem;
  background-color: #ffffff;
  padding: 1.5rem;
  padding-top: 4.5rem; }

.bio__img {
  box-shadow: 0 0 15px rgba(0, 0, 0, 0.2);
  border-radius: 50%;
  width: 9rem;
  height: 9rem;
  margin-bottom: -3rem;
  margin-left: auto;
  margin-right: auto; }
  .bio__img img {
    width: 100%;
    border-radius: 50%;
    width: 9rem;
    height: 9rem;
    display: block;
    border: 0.25rem solid #ffffff; }

.contact__wrap {
  z-index: 2;
  width: 100%;
  padding: 1.5rem;
  -webkit-justify-content: center;
      -ms-flex-pack: center;
          justify-content: center;
  top: 3rem;
  position: fixed;
  transition: all .3s ease;
  -webkit-transform: translateY(-7.5rem) perspective(400px) rotate3d(1, 0, 0, 90deg);
          transform: translateY(-7.5rem) perspective(400px) rotate3d(1, 0, 0, 90deg); }
  .contact__wrap.is-active {
    -webkit-transform: translateY(0) perspective(400px);
            transform: translateY(0) perspective(400px); }
  @media (min-width: 1200px) {
    .contact__wrap {
      left: 15rem;
      width: calc(100% - 300px);
      top: 0; } }

.contact__title,
.contact__email {
  padding-top: 0.6rem;
  padding-right: 0.75rem;
  padding-left: 0.75rem;
  text-align: center; }

.contact__title {
  border-right: none; }

.main-nav__contact {
  text-align: center;
  position: absolute;
  right: 0; }
  @media (max-width: 400px) {
    .main-nav__contact {
      left: 0; } }
  .main-nav__contact a {
    text-align: center; }
    .main-nav__contact a:before, .main-nav__contact a:after {
      display: none; }
  @media (min-width: 1200px) {
    .main-nav__contact {
      top: 3rem;
      left: 1.5rem;
      right: 1.5rem; } }

.contact-arrow {
  margin-left: .2rem;
  display: inline-block;
  -webkit-transform: rotate3d(0, 0, 0, 0deg);
          transform: rotate3d(0, 0, 0, 0deg);
  transition: all .3s ease; }
  .is-down .contact-arrow {
    -webkit-transform: rotate3d(1, 0, 0, 180deg);
            transform: rotate3d(1, 0, 0, 180deg); }

/*# sourceMappingURL=data:application/json;base64, */
